{
    "$schema": "https://opencode.ai/config.json",
    "model": "zhipuai-coding-plan/glm-4.6",
    "small_model": "github-copilot/grok-code-fast-1",
    "autoupdate": false,
    "username": "Towry",
    "share": "disabled",
    "disabled_providers": [
        "openai",
        "gemini"
    ],
    "instructions": [
        "./AGENTS.md"
    ],
    "agent": {
        "build": {
            "model": "zhipuai-coding-plan/glm-4.6",
        },
        "plan": {
            "mode": "primary",
            "model": "github-copilot/gpt-5",
            "prompt": "{file:./roles/oracle.md}",
            "tools": {
                "write": true,
                "edit": true,
                "bash": true,
                "grep": true,
                "read": true,
                "list": true,
                "glob": true,
                "webfetch": false,
                "brightdata*": true,
                "grep-code*": true
            },
            "permission": {
                "bash": "ask",
                "edit": "ask"
            }
        }
    },
    "provider": {
        /// if use tab change the MODE, but model not changing,
        /// that means the model is not recognized, you must list it in
        /// the provider.models.
        /// openrouter is builtin provider in opencode, but not all models
        /// is loaded.
        "openrouter": {
            "npm": "@openrouter/ai-sdk-provider",
            "name": "OpenRouter",
            "options": {
                "apiKey": "{env:OPENROUTER_API_KEY}"
            },
            "models": {
                "gpt-5-codex-low": {
                    "id": "openai/gpt-5-codex",
                    "name": "GPT-5 Codex Low",
                    "options": {
                        "reasoningEffort": "low",
                        "textVerbosity": "low",
                        "reasoningSummary": "auto"
                    }
                },
                "gpt-5-codex-medium": {
                    "id": "openai/gpt-5-codex",
                    "name": "GPT-5 Codex Medium",
                    "options": {
                        "reasoningEffort": "medium",
                        "textVerbosity": "low",
                        "reasoningSummary": "auto"
                    }
                },
                "gpt-5-medium": {
                    "id": "openai/gpt-5",
                    "name": "GPT-5 Medium",
                    "options": {
                        "reasoningEffort": "medium",
                        "textVerbosity": "low",
                        "reasoningSummary": "auto"
                    }
                },
                "openai/gpt-5": {
                    "name": "GPT-5",
                    "options": {
                        "reasoningEffort": "medium",
                        "textVerbosity": "low",
                        "reasoningSummary": "auto"
                    }
                },
                "x-ai/grok-4-fast": {
                    "name": "Grok 4 Fast",
                    "tool_call": true,
                    "attachment": true
                },
                "x-ai/grok-code-fast-1": {
                    "name": "Grok Code Fast 1",
                    "tool_call": true,
                    "attachment": true
                },
                "z-ai/glm-4.6": {
                    "name": "GLM 4.6",
                    "tool_call": true,
                    "attachment": true
                },
                "deepseek/deepseek-chat-v3.1": {
                    "name": "DeepSeek Chat V3.1",
                    "tool_call": true,
                    "attachment": true
                },
                "mistralai/mistral-small-24b-instruct-2501": {
                    "name": "Mistral Small 24B Instruct"
                },
                "meta-llama/llama-4-scout": {
                    "name": "Llama 4 Scout",
                    "tool_call": true,
                    "attachment": true
                },
                "meta-llama/llama-4-maverick": {
                    "name": "Llama 4 Maverick",
                    "tool_call": true,
                    "attachment": true
                },
                "meta-llama/llama-3.3-70b-instruct": {
                    "name": "Llama 3.3 70B Instruct",
                    "tool_call": true
                },
                "z-ai/glm-4.5": {
                    "name": "GLM 4.5",
                    "tool_call": true
                },
                "mistralai/mistral-medium-3.1": {
                    "name": "Mistral Medium 3.1",
                    "tool_call": true,
                    "attachment": false
                }
            }
        }
    },
    "permission": {
        "bash": {
            "git commit": "ask",
            "git add": "ask",
            "rg": "allow",
            "ast-grep": "allow",
            "fd": "allow",
            "ls": "allow",
            "cd": "allow"
        },
        "edit": "allow",
        "webfetch": "ask"
    },
    "tools": {
        "playwright*": false,
        "github*": false,
        "context7*": false,
        "mermaid*": false,
        "brave-search*": false
    },
    // global mcp settings
    // disabled in global can enabled for a specific agent with tools setting
    // like `context7*: true`
    "mcp": {
        "commander": {
            "type": "local",
            "command": [
                "commander-mcp"
            ],
            "enabled": true
        },
        "context7": {
            "type": "local",
            "command": [
                "bunx",
                "@upstash/context7-mcp"
            ],
            "enabled": true,
            "environment": {}
        },
        "playwright": {
            "type": "local",
            "command": [
                "bunx",
                "@playwright/mcp@latest",
                "--executable-path",
                "google-chrome-stable",
                "--extension"
            ],
            "enabled": true
        },
        "zai-ms": {
            "type": "local",
            "command": [
                "bunx",
                "@z_ai/mcp-server"
            ],
            "environment": {
                "Z_AI_MODE": "ZHIPU",
                "Z_AI_API_KEY": "{env:ZAI_API_KEY}"
            }
        },
        "github": {
            "type": "local",
            "command": [
                "github-mcp-server",
                "stdio",
                "--toolsets",
                "all"
            ],
            "enabled": true,
            "environment": {
                "GITHUB_PERSONAL_ACCESS_TOKEN": "{env:GITHUB_PERSONAL_ACCESS_TOKEN}"
            }
        },
        "mermaid": {
            "type": "local",
            "command": [
                "bunx",
                "mcp-mermaid"
            ],
            "enabled": true
        },
        "grep-code": {
            "type": "remote",
            "url": "https://mcp.grep.app",
            "enabled": true
        },
        "brightdata": {
            "type": "local",
            "command": [
                "bunx",
                "@brightdata/mcp"
            ],
            "enabled": true,
            "environment": {
                "API_TOKEN": "{env:BRIGHTDATA_API_KEY}"
            }
        }
    },
    "lsp": {}
}
