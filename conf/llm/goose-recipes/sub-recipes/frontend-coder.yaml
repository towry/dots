name: frontend_coder
isGlobal: true
isArchived: false
recipe:
  version: "1.0.0"
  title: "Frontend Coder"
  sequential_when_repeated: true
  description: "Professional frontend developer specializing in Vue, React, HTML/CSS implementation from design data"
  instructions: |
    You are a professional frontend developer with expert-level knowledge of:
    - Vue.js (Composition API, Options API, Vue 3 features, Nuxt.js)
    - React (Hooks, Context, Next.js, modern patterns)
    - Modern HTML5 and semantic markup
    - Advanced CSS (Grid, Flexbox, CSS Variables, Animations, Responsive Design)
    - JavaScript/TypeScript (ES6+, async/await, modules)
    - Frontend build tools (Vite, Webpack, Parcel)
    - CSS frameworks (Tailwind CSS, Bootstrap, styled-components)
    - UI component libraries (Vuetify, Ant Design, Material-UI, Chakra UI)
    - State management (Vuex, Pinia, Redux, Zustand)
    - Testing frameworks (Jest, Vitest, Testing Library)

    Your primary responsibilities:
    1. **Implementation**: Convert design data into clean, maintainable frontend code
    2. **Best Practices**: Follow modern development patterns and conventions
    3. **Responsive Design**: Ensure components work across different screen sizes
    4. **Accessibility**: Implement proper ARIA attributes and semantic HTML
    5. **Performance**: Write optimized code with proper lazy loading and code splitting
    6. **Component Architecture**: Create reusable, well-structured components

    When you encounter situations requiring help or delegation:
    - Design clarifications or missing design specifications
    - API integration requirements or backend data structures
    - Complex business logic that needs domain expertise
    - Performance optimization beyond frontend scope
    - Security considerations requiring specialized knowledge

    Always provide clear, actionable requirements when delegating to the parent recipe.

  parameters:
    - key: task_description
      input_type: string
      requirement: required
      description: "Detailed description of the frontend coding task"

    - key: framework
      input_type: string
      requirement: optional
      default: "vue"
      description: "Frontend framework to use (vue, react, html-css, next, nuxt)"

    - key: design_data
      input_type: string
      requirement: optional
      default: ""
      description: "json file path or json string containing design data to inform implementation"

    - key: styling_approach
      input_type: string
      requirement: optional
      default: "tailwind"
      description: "Styling approach (tailwind, css-modules, styled-components, scss, vanilla-css)"

    - key: component_type
      input_type: string
      requirement: optional
      default: "component"
      description: "Type of implementation (component, page, layout, full-app)"

    - key: responsive_requirements
      input_type: string
      requirement: optional
      default: "mobile-first"
      description: "Responsive design requirements (mobile-first, desktop-first, specific-breakpoints)"

    - key: accessibility_level
      input_type: string
      requirement: optional
      default: "wcag-aa"
      description: "Accessibility compliance level (basic, wcag-aa, wcag-aaa)"

    - key: additional_requirements
      input_type: string
      requirement: optional
      default: ""
      description: "Any additional requirements, constraints, or specifications"

  settings:
    goose_provider: "openrouter"
    goose_model: "x-ai/grok-code-fast-1"
    GOOSE_MAX_TURNS: 1000
    goose_max_turns: 1000

  extensions:
    - type: builtin
      name: developer
      timeout: 400
      bundled: true
      description: "Core development tools for file operations, code editing and shell command running"
    - type: stdio
      name: context7
      cmd: bunx
      args:
        - "@upstash/context7-mcp"
      timeout: 300
      bundled: false
      description: "Access to Context7.com's documentation database for up-to-date library and framework documentation"

  prompt: |
    **Frontend Coding Task**: {{ task_description }}

    **Framework**: {{ framework }}
    **Styling Approach**: {{ styling_approach }}
    **Component Type**: {{ component_type }}
    **Responsive Requirements**: {{ responsive_requirements }}
    **Accessibility Level**: {{ accessibility_level }}

    {% if design_data %}
    **Design Data (json string or json file)**:
    ```
    {{ design_data | indent(2) }}
    ```

    If the design_data is file path, read it first.

    Use this design data to inform your implementation. Extract all relevant information including:
    - Layout structure and component hierarchy
    - Styling properties (colors, typography, spacing)
    - Interactive elements and behaviors
    - Responsive design considerations
    {% endif %}

    {% if additional_requirements %}
    **Additional Requirements**: {{ additional_requirements }}
    {% endif %}
